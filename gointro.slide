What you should know about Go
A brief introduction

Chun Liu

5 Mar 2018

* Agenda
- What is Go? - a brief history
- Why Go? - the major difference 
- Where and when to use Go? - usage scenarios

* What is Go?
.image images/gopher.jpg _ 400
.caption The gopher

* A Programming Language
.play code/slowfib/slowfib.go

* With features
- Compiled to machine code
- Statically typed with type inference 
.play code/types/types.go /START OMIT/,/END OMIT/
- Garbage collected
- CSP based concurrency
- Excellent standard library
- Great tools

* Developed at Google and open source
- Conceived in Sept 2007 by Robert Griesemer, Rob Pike and Ken Thompson
.image images/GPT.png _ 512
.caption From left: Robert Griesemer, Rob Pike and Ken Thompson. _Picture_from_internet_.
- Officially announced in Nov 2009
- Go 1 released in Mar 2012
- Go 1.10 released in Feb 2017

* Why Go?

    The properties Go does have address the issues that make large-scale software development 
    difficult.
    -- Rob Pike 

* Go was designed to solve (Google's) problems
- Slow builds
- Uncontrolled dependencies
- Each programmer using a different subset of the language
- Poor program understanding (documentation, etc.)
- Duplication of effort
- Cost of updates
- Cross-language builds

* With the philosophy
*Simplicity*

- Clean syntax and light on keywords
- No type hierarchy, no inheritance, no exception, no generics ...

*Orthogonality*

- Methods can be implemented for any type
- Structures represent data
- Interfaces represent abstraction

* Influenced by many other programming languages
.image images/The-Origins-of-Go.png _ 650
.caption The Origin of Go. _From_ [[https://www.safaribooksonline.com/library/view/the-go-programming/9780134190570/][_The_Go_Programming_Language_]]

* Where and when to use Go

* Go 2017 survey result
.image images/go-survey-2017.png _ 750
.caption _According_to_ [[https://blog.golang.org/survey2017-results][_Go_2017_Survey_Results_]]

* Use cases
- Kubernetes
